#!/bin/sh -e

# check if merge from upstream/master
result=$(ps -ocommand= -p $PPID | grep -c ' merge upstream/master')
if [ "$result" -eq 1 ]; then
  # shellcheck source=bin/lib/output.sh
  . "$(dirname "$0")/../bin/lib/output.sh"

  # shellcheck source=.githooks/commands/.post-merge
  configFile="$(dirname "$0")/../.githooks/commands/.post-merge"

  newAndChangedFiles=$(git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD)

  executeCommandsByCondition() {
    while IFS=, read -r filePathStartsWith command
    do
      for filename in $newAndChangedFiles
      do
        case "$filename" in
          $filePathStartsWith*)
            output "\nPost merge command:" "heading"
            output "$command" "info"
            setsid sh -c "./../$command < /dev/stdout"
            result=$?
            if [ $result -ne 0 ]; then
              problematicCommands=$problematicCommands$command"\n"
            fi
          ;;
        esac
      done
    done < "$configFile"

    if [ -n "$problematicCommands" ]
    then
      output "\nCommand(s) failed." "heading"
      output 'Run below command(s) after fixing errors:' "heading"
      output "$problematicCommands" "info"
      exit 1
    fi
  }

  executeCommandsByCondition
fi
