#!/bin/sh

. $(dirname "$0")/../bin/lib/output.sh

stagedFiles=$(git diff --cached --name-only)
modifiedFiles=$(git ls-files -m);

for filename in $stagedFiles
do
  # Check if staged file was modified before commit.
  staged_file_is_modified=false
  for modified in $modifiedFiles
  do
    if [ "$modified" = "$filename" ]; then
      staged_file_is_modified=true
      break
    fi
  done

  # Check is PHP file.
  if [ ${filename##*.} = "php" ] && [ -f $filename ]; then
    # Check if file need to be fixed.
    result=$(./../bin/php-cs-fixer $filename --dry-run --diff 2>&1 | grep -c "begin diff")
    if [ $result -gt 0 ]; then
      if [ $staged_file_is_modified = true ]; then
        problematicFiles=$problematicFiles$filename"\n"
        continue
      else
        ./../bin/php-cs-fixer $filename
        "git add $filename"
        fixedFiles=$fixedFiles$filename"\n"
      fi
    fi
  fi

  # Check if there is a newline at the end of a file.
  result=$(tail -n 1 "$stagedFiles")
  if [ "$result" != "" ]; then
    if [ $staged_file_is_modified = true ]; then
      problematicFiles=$problematicFiles$filename"\n"
      continue
    else
      # Add a newline when missing.
      printf "\n" >> "$stagedFiles"
      "git add $filename"
      fixedFiles=$fixedFiles$filename"\n"
    fi
  fi
done

if [ -n "$fixedFiles" ]
then
    output "File(s) fixed and added to the commit:" "heading"
    output "$fixedFiles" "info"
fi

if [ -n "$problematicFiles" ]
then
    output "File(s) cannot be fixed because it has been modified after being staged." "heading"
    output '(use "bin/git add <file>" and/or "bin/git restore <file>"):' "heading"
    output "$problematicFiles" "info"
    exit 1
fi
